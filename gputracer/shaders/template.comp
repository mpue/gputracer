
#version 450
uniform float iTime;
uniform vec3 iMouse;

layout(local_size_x = 16, local_size_y = 16) in;
layout(rgba8, binding = %BINDING_UNIT%) uniform image2D outputImage;

layout(binding = 1) uniform FragUBO {
  mat4 invProjectionView;
  float near;
  float far;
}
camera;

void mainImage( out vec4 C, in vec2 U)
{
    // your code here
}

void main() {
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 dims = imageSize(outputImage); // fetch image dimensions

  vec2 texCoord = vec2(float(pixelCoords.x) / float(dims.x),
                       float(pixelCoords.y) / float(dims.y));
  
  vec4 outColor;

  mainImage(outColor,gl_GlobalInvocationID.xy);
  imageStore(outputImage, pixelCoords, outColor);
}

